from PyQt5 import QtCore, QtGui, QtWidgets


class SolverWin(object):
    def setupUi(self, solver):
        solver.setObjectName("solver")
        solver.resize(800, 600)
        self.centralwidget = QtWidgets.QWidget(solver)
        self.centralwidget.setObjectName("centralwidget")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.centralwidget)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.tab_widget = QtWidgets.QTabWidget(self.centralwidget)
        self.tab_widget.setTabsClosable(True)
        self.tab_widget.setMovable(True)
        self.tab_widget.setObjectName("tab_widget")
        self.tab_1 = QtWidgets.QWidget()
        self.tab_1.setObjectName("tab_1")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.tab_1)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.tree_widget_1 = QtWidgets.QTreeWidget(self.tab_1)
        self.tree_widget_1.setAlternatingRowColors(True)
        self.tree_widget_1.setObjectName("tree_widget_1")
        self.tree_widget_1.setHeaderHidden(True)
        self.tree_widget_1.setColumnCount(2)
        self.tree_widget_1.setColumnWidth(0, 250)
        self.horizontalLayout_2.addWidget(self.tree_widget_1)
        self.tab_widget.addTab(self.tab_1, "")
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.tab_2)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.tree_widget_2 = QtWidgets.QTreeWidget(self.tab_2)
        self.tree_widget_2.setAlternatingRowColors(True)
        self.tree_widget_2.setObjectName("tree_widget_2")
        self.tree_widget_2.setHeaderHidden(True)
        self.tree_widget_2.setColumnCount(2)
        self.tree_widget_2.setColumnWidth(0, 250)
        self.horizontalLayout.addWidget(self.tree_widget_2)
        self.tab_widget.addTab(self.tab_2, "")
        self.horizontalLayout_3.addWidget(self.tab_widget)
        solver.setCentralWidget(self.centralwidget)
        self.menu_bar = QtWidgets.QMenuBar(solver)
        self.menu_bar.setGeometry(QtCore.QRect(0, 0, 800, 26))
        self.menu_bar.setObjectName("menu_bar")
        self.menu_file = QtWidgets.QMenu(self.menu_bar)
        self.menu_file.setObjectName("menu_file")
        self.menu_edit = QtWidgets.QMenu(self.menu_bar)
        self.menu_edit.setObjectName("menu_edit")
        self.menu_view = QtWidgets.QMenu(self.menu_bar)
        self.menu_view.setObjectName("menu_view")
        self.menu_theme = QtWidgets.QMenu(self.menu_view)
        self.menu_theme.setObjectName("menu_theme")

        self.menu_font_size = QtWidgets.QLabel("Font Size: ")
        self.menu_font_size.setStyleSheet("font-size:9pt;")

        self.slider_widget = QtWidgets.QWidget(self)
        self.slider_layout = QtWidgets.QHBoxLayout(self.slider_widget)
        self.slider = QtWidgets.QSlider()
        self.slider.setMinimumWidth(200)
        self.slider.setOrientation(QtCore.Qt.Horizontal)
        self.slider.setMinimum(10)
        self.slider.setMaximum(30)
        self.slider_layout.addWidget(self.menu_font_size)
        self.slider_layout.addWidget(self.slider)
        self.slider_widget.setLayout(self.slider_layout)
        self.slider_widget.setStyleSheet("background-color:#2a2b2f;")

        solver.setMenuBar(self.menu_bar)
        self.statusbar = QtWidgets.QStatusBar(solver)
        self.statusbar.setObjectName("statusbar")
        solver.setStatusBar(self.statusbar)
        self.action_new = QtWidgets.QAction(solver)
        self.action_new.setObjectName("action_new")
        self.action_open = QtWidgets.QAction(solver)
        self.action_open.setObjectName("action_open")
        self.action_save = QtWidgets.QAction(solver)
        self.action_save.setObjectName("action_save")
        self.action_saveas = QtWidgets.QAction(solver)
        self.action_saveas.setObjectName("action_saveas")
        self.action_close = QtWidgets.QAction(solver)
        self.action_close.setObjectName("action_close")
        self.action_delete = QtWidgets.QAction(solver)
        self.action_delete.setObjectName("action_delete")
        self.action_insert = QtWidgets.QAction(solver)
        self.action_insert.setObjectName("action_insert")
        self.action_replace = QtWidgets.QAction(solver)
        self.action_replace.setObjectName("action_replace")
        self.action_only_keys = QtWidgets.QAction(solver)
        self.action_only_keys.setCheckable(True)
        self.action_only_keys.setObjectName("action_only_keys")
        self.action_slider = QtWidgets.QWidgetAction(self)
        self.action_slider.setDefaultWidget(self.slider_widget)
        self.action_light = QtWidgets.QAction(solver)
        self.action_light.setCheckable(True)
        self.action_light.setObjectName("action_light")
        self.action_dark = QtWidgets.QAction(solver)
        self.action_dark.setCheckable(True)
        self.action_dark.setObjectName("action_dark")
        self.action_dark.setChecked(True)
        self.action_color_schemes = QtWidgets.QAction(solver)
        self.action_color_schemes.setObjectName("action_color_schemes")
        self.menu_file.addAction(self.action_new)
        self.menu_file.addAction(self.action_open)
        self.menu_file.addAction(self.action_save)
        self.menu_file.addAction(self.action_saveas)
        self.menu_file.addAction(self.action_close)
        self.menu_edit.addAction(self.action_delete)
        self.menu_edit.addAction(self.action_insert)
        self.menu_edit.addAction(self.action_replace)
        self.menu_theme.addAction(self.action_light)
        self.menu_theme.addAction(self.action_dark)
        self.menu_view.addAction(self.action_only_keys)
        self.menu_view.addSeparator()
        self.menu_view.addAction(self.action_slider)
        self.menu_view.addAction(self.menu_theme.menuAction())
        self.menu_view.addAction(self.action_color_schemes)
        self.menu_bar.addAction(self.menu_file.menuAction())
        self.menu_bar.addAction(self.menu_edit.menuAction())
        self.menu_bar.addAction(self.menu_view.menuAction())

        self.retranslateUi(solver)
        self.tab_widget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(solver)

    def retranslateUi(self, solver):
        _translate = QtCore.QCoreApplication.translate
        solver.setWindowTitle(_translate("solver", "Solver"))
        self.tab_widget.setTabText(
            self.tab_widget.indexOf(self.tab_1), _translate("solver", "Tab 1")
        )
        self.tab_widget.setTabText(
            self.tab_widget.indexOf(self.tab_2), _translate("solver", "Tab 2")
        )
        self.menu_file.setTitle(_translate("solver", "File"))
        self.menu_edit.setTitle(_translate("solver", "Edit"))
        self.menu_view.setTitle(_translate("solver", "View"))
        self.menu_theme.setTitle(_translate("solver", "Theme"))
        self.action_new.setText(_translate("solver", "New"))
        self.action_new.setShortcut(_translate("solver", "Ctrl+N"))
        self.action_open.setText(_translate("solver", "Open"))
        self.action_open.setShortcut(_translate("solver", "Ctrl+O"))
        self.action_save.setText(_translate("solver", "Save"))
        self.action_save.setShortcut(_translate("solver", "Ctrl+S"))
        self.action_saveas.setText(_translate("solver", "Save As"))
        self.action_saveas.setShortcut(_translate("solver", "Ctrl+Shift+S"))
        self.action_close.setText(_translate("solver", "Close"))
        self.action_close.setShortcut(_translate("solver", "Ctrl+W"))
        self.action_delete.setText(_translate("solver", "Delete"))
        self.action_delete.setShortcut(_translate("solver", "Del"))
        self.action_insert.setText(_translate("solver", "Insert"))
        self.action_insert.setShortcut(_translate("solver", "Ctrl++"))
        self.action_replace.setText(_translate("solver", "Replace"))
        self.action_replace.setShortcut(_translate("solver", "Ctrl+F"))
        self.action_only_keys.setText(_translate("solver", "Show Only Keys"))
        self.action_light.setText(_translate("solver", "Light"))
        self.action_dark.setText(_translate("solver", "Dark"))
        self.action_color_schemes.setText(_translate("solver", "Color Schemes"))
